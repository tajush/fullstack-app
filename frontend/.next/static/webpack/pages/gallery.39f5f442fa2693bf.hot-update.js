/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/gallery",{

/***/ "(pages-dir-browser)/./src/pages/gallery.tsx":
/*!*******************************!*\
  !*** ./src/pages/gallery.tsx ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n// interface ImageType {\n//   _id: string;\n//   title: string;\n//   imageUrl: string;\n//   createdAt: string;\n// }\n// export default function Gallery() {\n//   const [images, setImages] = useState<ImageType[]>([]);\n//   const [title, setTitle] = useState('');\n//   const [imageFile, setImageFile] = useState<File | null>(null);\n//   const [loading, setLoading] = useState(false);\n//   // Fetch images from backend\n//   const fetchImages = async () => {\n//     try {\n//       const res = await axios.get('http://localhost:5000/api/gallery');\n//       setImages(res.data);\n//     } catch (err) {\n//       console.error('Failed to fetch images:', err);\n//     }\n//   };\n//   useEffect(() => {\n//     fetchImages();\n//   }, []);\n//   // Handle upload form submit\n//   const handleUpload = async (e: React.FormEvent) => {\n//     e.preventDefault();\n//     if (!imageFile) return alert('Please select an image.');\n//     setLoading(true);\n//     try {\n//       const formData = new FormData();\n//       formData.append('title', title);\n//       formData.append('image', imageFile);\n//       await axios.post('http://localhost:5000/api/gallery', formData, {\n//         headers: { 'Content-Type': 'multipart/form-data' },\n//       });\n//       setTitle('');\n//       setImageFile(null);\n//       await fetchImages(); // Refresh gallery after upload\n//     } catch (err) {\n//       console.error('Upload failed:', err);\n//       alert('Upload failed');\n//     }\n//     setLoading(false);\n//   };\n//   return (\n//     <div style={{ maxWidth: 800, margin: '20px auto' }}>\n//       <h2>Gallery</h2>\n//       <form onSubmit={handleUpload} style={{ marginBottom: 20 }}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Image Title\"\n//           value={title}\n//           onChange={e => setTitle(e.target.value)}\n//           required\n//           style={{ marginRight: 10 }}\n//         />\n//         <input\n//           type=\"file\"\n//           accept=\"image/*\"\n//           onChange={e => setImageFile(e.target.files ? e.target.files[0] : null)}\n//           required\n//         />\n//         <button type=\"submit\" disabled={loading} style={{ marginLeft: 10 }}>\n//           {loading ? 'Uploading...' : 'Upload'}\n//         </button>\n//       </form>\n//       <div\n//         style={{\n//           display: 'grid',\n//           gridTemplateColumns: 'repeat(auto-fill, minmax(150px, 1fr))',\n//           gap: 15,\n//         }}\n//       >\n//         {images.length === 0 && <p>No images yet.</p>}\n//         {images.map(img => (\n//           <div\n//             key={img._id}\n//             style={{\n//               border: '1px solid #ccc',\n//               borderRadius: 8,\n//               overflow: 'hidden',\n//               textAlign: 'center',\n//               padding: 5,\n//             }}\n//           >\n//             <img\n//               src={`http://localhost:5000${img.imageUrl}`}\n//               alt={img.title}\n//               style={{ width: '100%', height: 120, objectFit: 'cover' }}\n//             />\n//             <p style={{ margin: '8px 0 0' }}>{img.title}</p>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9wYWdlcy9nYWxsZXJ5LnRzeCIsIm1hcHBpbmdzIjoiQUFBQSwrQ0FBK0M7QUFDL0MsNkJBQTZCO0FBRTdCLHdCQUF3QjtBQUN4QixpQkFBaUI7QUFDakIsbUJBQW1CO0FBQ25CLHNCQUFzQjtBQUN0Qix1QkFBdUI7QUFDdkIsSUFBSTtBQUVKLHNDQUFzQztBQUN0QywyREFBMkQ7QUFDM0QsNENBQTRDO0FBQzVDLG1FQUFtRTtBQUNuRSxtREFBbUQ7QUFFbkQsaUNBQWlDO0FBQ2pDLHNDQUFzQztBQUN0QyxZQUFZO0FBQ1osMEVBQTBFO0FBQzFFLDZCQUE2QjtBQUM3QixzQkFBc0I7QUFDdEIsdURBQXVEO0FBQ3ZELFFBQVE7QUFDUixPQUFPO0FBRVAsc0JBQXNCO0FBQ3RCLHFCQUFxQjtBQUNyQixZQUFZO0FBRVosaUNBQWlDO0FBQ2pDLHlEQUF5RDtBQUN6RCwwQkFBMEI7QUFDMUIsK0RBQStEO0FBRS9ELHdCQUF3QjtBQUN4QixZQUFZO0FBQ1oseUNBQXlDO0FBQ3pDLHlDQUF5QztBQUN6Qyw2Q0FBNkM7QUFFN0MsMEVBQTBFO0FBQzFFLDhEQUE4RDtBQUM5RCxZQUFZO0FBRVosc0JBQXNCO0FBQ3RCLDRCQUE0QjtBQUM1Qiw2REFBNkQ7QUFDN0Qsc0JBQXNCO0FBQ3RCLDhDQUE4QztBQUM5QyxnQ0FBZ0M7QUFDaEMsUUFBUTtBQUNSLHlCQUF5QjtBQUN6QixPQUFPO0FBRVAsYUFBYTtBQUNiLDJEQUEyRDtBQUMzRCx5QkFBeUI7QUFFekIsb0VBQW9FO0FBQ3BFLGlCQUFpQjtBQUNqQix3QkFBd0I7QUFDeEIsc0NBQXNDO0FBQ3RDLDBCQUEwQjtBQUMxQixxREFBcUQ7QUFDckQscUJBQXFCO0FBQ3JCLHdDQUF3QztBQUN4QyxhQUFhO0FBQ2IsaUJBQWlCO0FBQ2pCLHdCQUF3QjtBQUN4Qiw2QkFBNkI7QUFDN0Isb0ZBQW9GO0FBQ3BGLHFCQUFxQjtBQUNyQixhQUFhO0FBQ2IsK0VBQStFO0FBQy9FLGtEQUFrRDtBQUNsRCxvQkFBb0I7QUFDcEIsZ0JBQWdCO0FBRWhCLGFBQWE7QUFDYixtQkFBbUI7QUFDbkIsNkJBQTZCO0FBQzdCLDBFQUEwRTtBQUMxRSxxQkFBcUI7QUFDckIsYUFBYTtBQUNiLFVBQVU7QUFDVix5REFBeUQ7QUFDekQsK0JBQStCO0FBQy9CLGlCQUFpQjtBQUNqQiw0QkFBNEI7QUFDNUIsdUJBQXVCO0FBQ3ZCLDBDQUEwQztBQUMxQyxpQ0FBaUM7QUFDakMsb0NBQW9DO0FBQ3BDLHFDQUFxQztBQUNyQyw0QkFBNEI7QUFDNUIsaUJBQWlCO0FBQ2pCLGNBQWM7QUFDZCxtQkFBbUI7QUFDbkIsNkRBQTZEO0FBQzdELGdDQUFnQztBQUNoQywyRUFBMkU7QUFDM0UsaUJBQWlCO0FBQ2pCLCtEQUErRDtBQUMvRCxtQkFBbUI7QUFDbkIsY0FBYztBQUNkLGVBQWU7QUFDZixhQUFhO0FBQ2IsT0FBTztBQUNQLElBQUkiLCJzb3VyY2VzIjpbIkY6XFxQZXJzb25hbFxcYXBwXFxmdWxsc3RhY2stYXBwXFxmcm9udGVuZFxcc3JjXFxwYWdlc1xcZ2FsbGVyeS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuLy8gaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcclxuXHJcbi8vIGludGVyZmFjZSBJbWFnZVR5cGUge1xyXG4vLyAgIF9pZDogc3RyaW5nO1xyXG4vLyAgIHRpdGxlOiBzdHJpbmc7XHJcbi8vICAgaW1hZ2VVcmw6IHN0cmluZztcclxuLy8gICBjcmVhdGVkQXQ6IHN0cmluZztcclxuLy8gfVxyXG5cclxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR2FsbGVyeSgpIHtcclxuLy8gICBjb25zdCBbaW1hZ2VzLCBzZXRJbWFnZXNdID0gdXNlU3RhdGU8SW1hZ2VUeXBlW10+KFtdKTtcclxuLy8gICBjb25zdCBbdGl0bGUsIHNldFRpdGxlXSA9IHVzZVN0YXRlKCcnKTtcclxuLy8gICBjb25zdCBbaW1hZ2VGaWxlLCBzZXRJbWFnZUZpbGVdID0gdXNlU3RhdGU8RmlsZSB8IG51bGw+KG51bGwpO1xyXG4vLyAgIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbi8vICAgLy8gRmV0Y2ggaW1hZ2VzIGZyb20gYmFja2VuZFxyXG4vLyAgIGNvbnN0IGZldGNoSW1hZ2VzID0gYXN5bmMgKCkgPT4ge1xyXG4vLyAgICAgdHJ5IHtcclxuLy8gICAgICAgY29uc3QgcmVzID0gYXdhaXQgYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjUwMDAvYXBpL2dhbGxlcnknKTtcclxuLy8gICAgICAgc2V0SW1hZ2VzKHJlcy5kYXRhKTtcclxuLy8gICAgIH0gY2F0Y2ggKGVycikge1xyXG4vLyAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggaW1hZ2VzOicsIGVycik7XHJcbi8vICAgICB9XHJcbi8vICAgfTtcclxuXHJcbi8vICAgdXNlRWZmZWN0KCgpID0+IHtcclxuLy8gICAgIGZldGNoSW1hZ2VzKCk7XHJcbi8vICAgfSwgW10pO1xyXG5cclxuLy8gICAvLyBIYW5kbGUgdXBsb2FkIGZvcm0gc3VibWl0XHJcbi8vICAgY29uc3QgaGFuZGxlVXBsb2FkID0gYXN5bmMgKGU6IFJlYWN0LkZvcm1FdmVudCkgPT4ge1xyXG4vLyAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4vLyAgICAgaWYgKCFpbWFnZUZpbGUpIHJldHVybiBhbGVydCgnUGxlYXNlIHNlbGVjdCBhbiBpbWFnZS4nKTtcclxuXHJcbi8vICAgICBzZXRMb2FkaW5nKHRydWUpO1xyXG4vLyAgICAgdHJ5IHtcclxuLy8gICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcclxuLy8gICAgICAgZm9ybURhdGEuYXBwZW5kKCd0aXRsZScsIHRpdGxlKTtcclxuLy8gICAgICAgZm9ybURhdGEuYXBwZW5kKCdpbWFnZScsIGltYWdlRmlsZSk7XHJcblxyXG4vLyAgICAgICBhd2FpdCBheGlvcy5wb3N0KCdodHRwOi8vbG9jYWxob3N0OjUwMDAvYXBpL2dhbGxlcnknLCBmb3JtRGF0YSwge1xyXG4vLyAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJyB9LFxyXG4vLyAgICAgICB9KTtcclxuXHJcbi8vICAgICAgIHNldFRpdGxlKCcnKTtcclxuLy8gICAgICAgc2V0SW1hZ2VGaWxlKG51bGwpO1xyXG4vLyAgICAgICBhd2FpdCBmZXRjaEltYWdlcygpOyAvLyBSZWZyZXNoIGdhbGxlcnkgYWZ0ZXIgdXBsb2FkXHJcbi8vICAgICB9IGNhdGNoIChlcnIpIHtcclxuLy8gICAgICAgY29uc29sZS5lcnJvcignVXBsb2FkIGZhaWxlZDonLCBlcnIpO1xyXG4vLyAgICAgICBhbGVydCgnVXBsb2FkIGZhaWxlZCcpO1xyXG4vLyAgICAgfVxyXG4vLyAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbi8vICAgfTtcclxuXHJcbi8vICAgcmV0dXJuIChcclxuLy8gICAgIDxkaXYgc3R5bGU9e3sgbWF4V2lkdGg6IDgwMCwgbWFyZ2luOiAnMjBweCBhdXRvJyB9fT5cclxuLy8gICAgICAgPGgyPkdhbGxlcnk8L2gyPlxyXG5cclxuLy8gICAgICAgPGZvcm0gb25TdWJtaXQ9e2hhbmRsZVVwbG9hZH0gc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAyMCB9fT5cclxuLy8gICAgICAgICA8aW5wdXRcclxuLy8gICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcclxuLy8gICAgICAgICAgIHBsYWNlaG9sZGVyPVwiSW1hZ2UgVGl0bGVcIlxyXG4vLyAgICAgICAgICAgdmFsdWU9e3RpdGxlfVxyXG4vLyAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gc2V0VGl0bGUoZS50YXJnZXQudmFsdWUpfVxyXG4vLyAgICAgICAgICAgcmVxdWlyZWRcclxuLy8gICAgICAgICAgIHN0eWxlPXt7IG1hcmdpblJpZ2h0OiAxMCB9fVxyXG4vLyAgICAgICAgIC8+XHJcbi8vICAgICAgICAgPGlucHV0XHJcbi8vICAgICAgICAgICB0eXBlPVwiZmlsZVwiXHJcbi8vICAgICAgICAgICBhY2NlcHQ9XCJpbWFnZS8qXCJcclxuLy8gICAgICAgICAgIG9uQ2hhbmdlPXtlID0+IHNldEltYWdlRmlsZShlLnRhcmdldC5maWxlcyA/IGUudGFyZ2V0LmZpbGVzWzBdIDogbnVsbCl9XHJcbi8vICAgICAgICAgICByZXF1aXJlZFxyXG4vLyAgICAgICAgIC8+XHJcbi8vICAgICAgICAgPGJ1dHRvbiB0eXBlPVwic3VibWl0XCIgZGlzYWJsZWQ9e2xvYWRpbmd9IHN0eWxlPXt7IG1hcmdpbkxlZnQ6IDEwIH19PlxyXG4vLyAgICAgICAgICAge2xvYWRpbmcgPyAnVXBsb2FkaW5nLi4uJyA6ICdVcGxvYWQnfVxyXG4vLyAgICAgICAgIDwvYnV0dG9uPlxyXG4vLyAgICAgICA8L2Zvcm0+XHJcblxyXG4vLyAgICAgICA8ZGl2XHJcbi8vICAgICAgICAgc3R5bGU9e3tcclxuLy8gICAgICAgICAgIGRpc3BsYXk6ICdncmlkJyxcclxuLy8gICAgICAgICAgIGdyaWRUZW1wbGF0ZUNvbHVtbnM6ICdyZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMTUwcHgsIDFmcikpJyxcclxuLy8gICAgICAgICAgIGdhcDogMTUsXHJcbi8vICAgICAgICAgfX1cclxuLy8gICAgICAgPlxyXG4vLyAgICAgICAgIHtpbWFnZXMubGVuZ3RoID09PSAwICYmIDxwPk5vIGltYWdlcyB5ZXQuPC9wPn1cclxuLy8gICAgICAgICB7aW1hZ2VzLm1hcChpbWcgPT4gKFxyXG4vLyAgICAgICAgICAgPGRpdlxyXG4vLyAgICAgICAgICAgICBrZXk9e2ltZy5faWR9XHJcbi8vICAgICAgICAgICAgIHN0eWxlPXt7XHJcbi8vICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkICNjY2MnLFxyXG4vLyAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogOCxcclxuLy8gICAgICAgICAgICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXHJcbi8vICAgICAgICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcclxuLy8gICAgICAgICAgICAgICBwYWRkaW5nOiA1LFxyXG4vLyAgICAgICAgICAgICB9fVxyXG4vLyAgICAgICAgICAgPlxyXG4vLyAgICAgICAgICAgICA8aW1nXHJcbi8vICAgICAgICAgICAgICAgc3JjPXtgaHR0cDovL2xvY2FsaG9zdDo1MDAwJHtpbWcuaW1hZ2VVcmx9YH1cclxuLy8gICAgICAgICAgICAgICBhbHQ9e2ltZy50aXRsZX1cclxuLy8gICAgICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogJzEwMCUnLCBoZWlnaHQ6IDEyMCwgb2JqZWN0Rml0OiAnY292ZXInIH19XHJcbi8vICAgICAgICAgICAgIC8+XHJcbi8vICAgICAgICAgICAgIDxwIHN0eWxlPXt7IG1hcmdpbjogJzhweCAwIDAnIH19PntpbWcudGl0bGV9PC9wPlxyXG4vLyAgICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgICAgKSl9XHJcbi8vICAgICAgIDwvZGl2PlxyXG4vLyAgICAgPC9kaXY+XHJcbi8vICAgKTtcclxuLy8gfVxyXG5cclxuXHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/pages/gallery.tsx\n"));

/***/ })

});